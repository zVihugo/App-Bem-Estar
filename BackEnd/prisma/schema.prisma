generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  email          String @unique
  name           String 
  password       String

  dateOfBirth    String
  faculty        String
  course         String

  role           Role @default(USER)

  reviews        Review[]
  relatorios     Relatorio[]
  dicas          Dica[]
  metas          Metas[]
  @@map("users")
}

model Review {
  id                        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId                    String   @db.ObjectId
  mediaSono                 Float

  DificuldadeParaDormir     DificuldadeParaDormir
  AcordaDescansado          AcordaDescansado
  SofreComSonoDuranteODia   SofreComSonoDuranteODia
  UsaTelaAntesDeDormir      UsaTelaAntesDeDormir
  TemRotinaDeSono           Boolean
  createdAt                 DateTime @default(now())
  user                      User  @relation(fields: [userId], references: [id])
  @@map("reviews")
}

model Relatorio{
    id                        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId                    String   @db.ObjectId

    mediaSono                 String
    dificuldadeParaDormir     String
    cansacoAoAcordar          String
    sonolenciaDiurna          String
    usoDeTelasAntesDeDormir   String
    regularidadeRotina        String
    createdAt                 DateTime @default(now())

    user                      User  @relation(fields: [userId], references: [id])
    @@map("relatorio")
}

model Dica {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  userId              String   @db.ObjectId 
  title               String
  imageUrl            String 
  type                Type 
  
  createdAt           DateTime @default(now())
  user                User  @relation(fields: [userId], references: [id])
  @@map("dicas")
}

model Metas {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  userId              String   @db.ObjectId 
  descricao           String
  isCompleted         Boolean 
  
  createdAt           DateTime @default(now())
  user                User  @relation(fields: [userId], references: [id])
  @@map("metas")
}

enum Role {
  ADMIN
  USER
}

enum Type {
  assistir
  ouvir
  ler
}

enum DificuldadeParaDormir {
  nunca
  raramente
  algumas_Vezes
  frequentemente
  quase_Sempre
}

enum AcordaDescansado {
  sempre
  algumas_Vezes
  raramente
  nunca
}

enum SofreComSonoDuranteODia {
  nunca
  raramente
  frequentemente
  sempre
}

enum UsaTelaAntesDeDormir {
  nunca
  raramente
  algumas_Vezes
  quase_Sempre
  sempre
}
